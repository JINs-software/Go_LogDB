[로그 패키지 작성]
- 로그는 분산 서비스를 만드는 가장 중요한 도구
- WAL(미리쓰기 로그), 트랜잭션 로그, 커밋 로그 등으로 부르는 로그는 스토리지 엔진, 메시지 큐, 합의 알고리즘 등의 핵심이 된다.
- 로그는 '순서'가 있는 데이터를 저장/공유/처리할 때 사용됨. 하나의 도구로 데이터베이스를 복제, 분산 서비스 조율한다.
- 시스템의 변경사항을 (분리할 수 없는) 한 단위의 연산까지 쪼개고 나눈 다음 로그로 저장/공유/처리할 수 있다면 분산 서비스에서의 문제를 비롯한 많은 문제 해결
- 완벽한 로그는 마지막 상태를 포함한, 존재했던 모든 상태를 가지며, 이러한 로그만 있으면 복잡해 보이던 기능도 얼마든지 만들 수 있다.

[로그의 작동 원리]
- 로그는 추가만 할 수 있는 레코드의 연속. 레코드는 로그의 끝에 추가함. 
- 로그에 레코드를 추가하면 로그는 레코드에 '고유하면서 순차적인 오프셋 숫자'를 할당함. 이는 레코드의 ID와 같다.
- "세그먼트"
    - 파일 하나에 레코드를 끊임없이 추가할 수는 없으므로 로그를 여러 개의 '세그먼트'로 나눈다. 
    - 세그먼트 목록에는 항상 하나의 활성 세그먼트가 있다. 유일하게 레코드를 쓸 수 있는 세그먼트이다. 
    - 세그먼트는 '저장 파일'과 '인덱스 파일'로 구성된다. 
        - 세그먼트의 '저장 파일': 레코드 데이터를 저장하고 추가해나간다.
        - 세그먼트의 '인덱스 파일': 레코드들의 인덱스를 저장

[로그 만들기]
- 레코드: 로그에 저장한 데이터
- 저장 파일: 레코드를 저장한 파일
- 인덱스 파일: 인덱스를 저장한 파일
- 세그먼트: 저장 파일과 인덱스 파일을 묶어서 말하는 추상적 개념
- 로그: 모든 세그먼트를 묶어서 말하는 추상적 개념


